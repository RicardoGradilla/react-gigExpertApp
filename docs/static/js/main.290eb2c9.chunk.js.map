{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACtCC,EADsC,KAC1BC,EAD0B,KAgB7C,OACG,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKjB,SACG,uBACGO,KAAK,OACLC,MAAOT,EACPU,SAlBiB,SAACP,GAExBF,EAAcE,EAAEQ,OAAOF,a,+BCRbG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,0FAC2EC,UAAUH,GADrF,sBAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATpB,kBAYbM,GAZa,4CAAH,sDCCVO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IACnC,OACG,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFAO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACbd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAcvC,OATAC,qBAAU,WACPxB,EAAQC,GAAUwB,MAAK,SAAAC,GACpBH,EAAS,CACNf,KAAOkB,EACPL,SAAS,SAGf,CAACpB,IAEGqB,EDXgBK,CAAa1B,GAA7BO,EAF6B,EAE7BA,KAAKa,EAFwB,EAExBA,QACZ,OACG,qCACG,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAGST,EAAKE,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEZpBgB,EAAe,WAAO,IAAD,EAEKzC,mBAAS,CAAC,cAFf,mBAExB0C,EAFwB,KAEZ3C,EAFY,KAI/B,OACG,qCACG,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEM2C,EAAWnB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEGA,SAAUA,GADLA,YCZ1B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.290eb2c9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React,{useState} from 'react';\n\n\nexport const AddCategory = ({setCategories}) => {\n   const [inputValue, setInputValue] = useState('');\n\n   const handleInputChange = (e) => {\n      \n      setInputValue(e.target.value);\n   };\n\n   const handleSumbit= (e) => {\n      e.preventDefault();\n      if(inputValue.trim().length > 2){  \n         setCategories(cats => [inputValue,...cats]);\n         setInputValue('');\n      }\n   };\n\n   return (\n      <form onSubmit={handleSumbit}>\n         <input \n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n         />\n      </form>\n   )\n};\n\nAddCategory.propTypes = {\n   setCategories : PropTypes.func.isRequired\n};\n","\n   export const getGifs = async (category) => {\n      const url = `https://api.giphy.com/v1/gifs/search?api_key=kvf3vmKKOs3NhqiTVDZgLoZTI6ZIpOtJ&q=${encodeURI(category)}&limit=10`;\n      const resp = await fetch(url);\n      const {data} = await resp.json();\n\n      const gifs = data.map(img => {\n         return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n         }\n      });\n      return gifs;\n   };","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n   return (\n      <div className=\"card animate__animated animate__fadeIn\">\n         <img src={url} alt={title}></img>\n         <p>{title}</p>\n      </div>\n   )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n   const {data,loading} = useFetchGifs(category);\n   return (\n      <>\n         <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n         {loading && <p className=\"animate__animated animate__flash\">cargando...</p>}\n         <div className=\"card-grid\">\n            \n               {\n                  data.map(img => (\n                     <GifGridItem \n                        key={img.id}\n                        {...img}\n                     />\n                  ))\n               }\n         </div>\n      </>\n   )\n}\n","import {useEffect, useState} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n   const [state, setstate] = useState({\n      data: [],\n      loading: true\n   });\n   useEffect(() => {\n      getGifs(category).then(imgs => {\n         setstate({\n            data : imgs,\n            loading: false\n         })\n      });\n   }, [category]);\n\n   return state;\n}\n","import React,{useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GitExpertApp = () => {\n\n   const [categories, setCategories] = useState(['One Punch']);\n   \n   return (\n      <>\n         <h1>GifExpertApp</h1>\n         <hr></hr>\n         <AddCategory setCategories={setCategories} />\n         <ol>\n            {\n               categories.map(category => (\n                  <GifGrid \n                     key={category}\n                     category={category}\n                  /> \n               ))\n            }\n         </ol>\n      </>\n   )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GitExpertApp } from './GitExpertApp';\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}